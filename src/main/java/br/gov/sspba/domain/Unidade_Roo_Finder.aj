// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package br.gov.sspba.domain;

import br.gov.sspba.domain.Comando;
import br.gov.sspba.domain.Unidade;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;

privileged aspect Unidade_Roo_Finder {
    
    public static Long Unidade.countFindUnidadesByIdComandoEquals(Comando idComando) {
        if (idComando == null) throw new IllegalArgumentException("The idComando argument is required");
        EntityManager em = Unidade.entityManager();
        TypedQuery q = em.createQuery("SELECT COUNT(o) FROM Unidade AS o WHERE o.idComando = :idComando", Long.class);
        q.setParameter("idComando", idComando);
        return ((Long) q.getSingleResult());
    }
    
    public static TypedQuery<Unidade> Unidade.findUnidadesByIdComandoEquals(Comando idComando) {
        if (idComando == null) throw new IllegalArgumentException("The idComando argument is required");
        EntityManager em = Unidade.entityManager();
        TypedQuery<Unidade> q = em.createQuery("SELECT o FROM Unidade AS o WHERE o.idComando = :idComando", Unidade.class);
        q.setParameter("idComando", idComando);
        return q;
    }
    
    public static TypedQuery<Unidade> Unidade.findUnidadesByIdComandoEquals(Comando idComando, String sortFieldName, String sortOrder) {
        if (idComando == null) throw new IllegalArgumentException("The idComando argument is required");
        EntityManager em = Unidade.entityManager();
        StringBuilder queryBuilder = new StringBuilder("SELECT o FROM Unidade AS o WHERE o.idComando = :idComando");
        if (fieldNames4OrderClauseFilter.contains(sortFieldName)) {
            queryBuilder.append(" ORDER BY ").append(sortFieldName);
            if ("ASC".equalsIgnoreCase(sortOrder) || "DESC".equalsIgnoreCase(sortOrder)) {
                queryBuilder.append(" ").append(sortOrder);
            }
        }
        TypedQuery<Unidade> q = em.createQuery(queryBuilder.toString(), Unidade.class);
        q.setParameter("idComando", idComando);
        return q;
    }
    
}
